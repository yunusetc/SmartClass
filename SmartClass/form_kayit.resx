<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_kayit_geri.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jDHGmAGzsvI3b0oBFyL4qvoAAAAASUVORK5CYII=
</value>
  </data>
</root>